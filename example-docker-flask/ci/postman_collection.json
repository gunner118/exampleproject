{
	"info": {
		"_postman_id": "e3de5592-ed51-4b8e-9177-caa63ce94115",
		"name": "8ball",
		"schema": "{{protocol}}s://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ping without data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "982ed448-9af5-4928-9d91-d806a4a7b7c8",
						"exec": [
							"pm.test(\"response is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"response is PONG\", function() {",
							"    pm.response.to.have.body(\"PONG\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{baseurl}}/ping",
					"protocol": "{{protocol}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Ping with data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "64500bc4-a6f0-48aa-b5c2-dbbdd1b8f2d2",
						"exec": [
							"pm.test(\"response is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"response returns data\", function() {",
							"    pm.response.to.have.body(\"PONG somedata\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{baseurl}}/ping/somedata",
					"protocol": "{{protocol}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"ping",
						"somedata"
					]
				}
			},
			"response": []
		},
		{
			"name": "Prediction",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aadba5a5-f4f6-47e3-95b6-1460264ee313",
						"exec": [
							"pm.test(\"response is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"response contains connotation\", function () {",
							"    pm.expect(pm.response.json()).to.have.property(\"connotation\");",
							"})",
							"",
							"pm.test(\"response contains prediction\", function () {",
							"    pm.expect(pm.response.json()).to.have.property(\"response\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{baseurl}}/",
					"protocol": "{{protocol}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}
